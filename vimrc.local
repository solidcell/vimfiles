let mapleader = ","

let Tlist_Ctags_Cmd = '/usr/local/bin/ctags'

source ~/.vim/vimrc

call pathogen#helptags()

"show a modified notification in the statusline
set statusline+=%m

"remove scrollbars and such
set guioptions=e

set noequalalways

if has("gui_running") && ( has("gui_mac") || has("gui_macvim") )
  set fuoptions=maxvert,maxhorz
  set transparency=0
endif
set guifont=Menlo:h13
set columns=300
set lines=300
colors vividchalk

:set list!
" Shortcut to rapidly toggle `set list`
nmap <leader>l :set list!<CR>
" Use the same symbols as TextMate for tabstops and EOLs
set listchars=tab:▸\ ,eol:¬
"Invisible character colors
highlight NonText guifg=#4a4a59
highlight SpecialKey guifg=#3a4a59

"character to show when wrap is set
set showbreak=↪

nmap <leader>r <Plug>RubyTestRun
nmap <Leader>R <Plug>RubyFileRun
nmap <Leader>/ <Plug>RubyTestRunLast

nnoremap <leader>t :CtrlP<CR>

"fold settings
set foldnestmax=10

"splitting and closing windows
nmap <leader>v :vs<CR>
nmap <leader>s :sp<CR>
nmap <leader>x :x<CR>

"swapping buffers between windows
"http://stackoverflow.com/questions/2586984/how-can-i-swap-positions-of-two-open-files-in-splits-in-vim
function! MarkWindowSwap()
  let g:markedWinNum = winnr()
endfunction
function! DoWindowSwap()
  "Mark destination
  let curNum = winnr()
  let curBuf = bufnr( "%" )
  exe g:markedWinNum . "wincmd w"
  "Switch to source and shuffle dest->source
  let markedBuf = bufnr( "%" )
  "Hide and open so that we aren't prompted and keep history
  exe 'hide buf' curBuf
  "Switch to dest and shuffle source->dest
  exe curNum . "wincmd w"
  "Hide and open so that we aren't prompted and keep history
  exe 'hide buf' markedBuf
endfunction
nmap <silent> <leader>mw :call MarkWindowSwap()<CR>
nmap <silent> <leader>pw :call DoWindowSwap()<CR>

"jump to the quickfix
nmap <leader>co :copen<CR>

"key mapping for window resizing
nmap < <C-w><
nmap > <C-w>>
nmap - <C-w>-
nmap + <C-w>+

"cursor movement while in insert mode
imap <C-h> <C-o>h
imap <C-j> <C-o>j
imap <C-k> <C-o>k
imap <C-l> <C-o>l

"NERDTree stuff
map <leader>[ :NERDTreeFind<CR>
hi directory term=bold gui=bold
let NERDTreeIgnore=['\.swp$']

"remove the mapping from the main vimrc that causes pausing after a 'w'
unmap wm

"ensure that tabs are 2 spaces
set tabstop=2
set shiftwidth=2
set softtabstop=2

"set the pwd to the current file's directory
nmap <leader>cd :cd %:h<CR>

"open the vimrc file
nmap <leader>vim :vsplit $MYVIMRC<CR>
"source the vimrc file
nmap <leader>src :source $MYVIMRC<CR>
"source the vimrc file after saving it
if has("autocmd")
  autocmd bufwritepost .vimrc source $MYVIMRC
endif
