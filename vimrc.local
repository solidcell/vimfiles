let mapleader = ","

let Tlist_Ctags_Cmd = '/usr/local/bin/ctags'

source ~/.vim/vimrc

call pathogen#helptags()

"show a modified notification in the statusline
set statusline+=%m

"remove scrollbars and such
set guioptions=e

set noequalalways

if has("gui_running") && ( has("gui_mac") || has("gui_macvim") )
  set guifont=Menlo:h13
  set columns=300
  set lines=300
  set fuoptions=maxvert,maxhorz
endif

:set list!
" Shortcut to rapidly toggle `set list`
nmap <leader>l :set list!<CR>
" Use the same symbols as TextMate for tabstops and EOLs
set listchars=tab:▸\ ,eol:¬
"Invisible character colors
highlight NonText guifg=#4a4a59
highlight SpecialKey guifg=#3a4a59

"character to show when wrap is set
set showbreak=↪

nmap <leader>r <Plug>RubyTestRun
nmap <Leader>R <Plug>RubyFileRun
nmap <Leader>/ <Plug>RubyTestRunLast

"give Command-T a more specific mapping so you don't have to wait like with <leader>t
nnoremap <leader>tc :CommandT<CR>

"fold settings
set foldnestmax=10

"managing windows
nmap <leader>v :vs<CR>
nmap <leader>s :sp<CR>
nmap <leader>x :x<CR>

"jump to the quickfix
nmap <leader>co :copen<CR>

"key mapping for window resizing
nmap < <C-w><
nmap > <C-w>>
nmap - <C-w>-
nmap + <C-w>+

"cursor movement while in insert mode
imap <C-h> <C-o>h
imap <C-j> <C-o>j
imap <C-k> <C-o>k
imap <C-l> <C-o>l

"NERDTree stuff
map <leader>[ :NERDTreeFind<CR>
hi directory term=bold gui=bold
let NERDTreeIgnore=['\.swp$']

".vimrc stuff
nmap <leader>vim :tabedit $MYVIMRC<CR>
" Source the vimrc file after saving it
if has("autocmd")
  autocmd bufwritepost .vimrc source $MYVIMRC
endif
